@page "/login"


@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager


<h2 class="card-title">Login</h2>
@if (!response)
{
    <ErrorMessage Message="Something went wrong with the login attempt"/>
}
<div class="card-body">
    <EditForm Model="Model" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email address</label>
            <InputText type="email" class="form-control" id="email" @bind-Value="Model.EmailAddress" />
            <ValidationMessage For="@(() => Model.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" class="form-control" id="password" @bind-value="Model.Password">
            <ValidationMessage For="@(() => Model.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    private LoginModel Model = new LoginModel();
    private bool response = true;

    private async Task HandleLogin()
    {
        response = await _authRepo.Login(Model);
        if (response)
            _navManager.NavigateTo("/");
    }
}
